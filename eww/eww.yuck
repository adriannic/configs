(defvar is-bar-visible
  "true"
)

(defvar is-notifications-visible-0
  "false"
)

(defvar battery-icons
  '{"Charging":"󰂄","Discharging":["󰂎","󰁺","󰁻","󰁼","󰁽","󰁾","󰁿","󰂀","󰂁","󰂂","󰁹"]}'
)

(defvar net-icons
  '{"none":"󱛇","portal":"󱚵","limited":"󱚵","full":"󰖩","unknown":"󰖪"}'
)

(defpoll active-workspace
  :interval "0.1s"
  "hyprctl monitors -j | jq 'map({id, active:.activeWorkspace.id})'"
)

(defpoll time
  :interval "60s"
  "date +%H:%M"
)

(defpoll vol
  :interval "0.05s"
  "~/.config/eww/scripts/getvol.sh"
)

(defpoll bluetooth
  :interval "0.1s"
  "bluetooth | cut -d' ' -f3"
)

(defpoll brightness
  :interval "0.05s"
  "brightnessctl -m | cut -d',' -f4 | cut -d'%' -f1"
)

(defpoll battery
  :interval "1s"
  "cat /sys/class/power_supply/BAT0/capacity"
)

(defpoll battery-state
  :interval "1s"
  "cat /sys/class/power_supply/BAT0/status"
)

(defpoll net-enabled
  :interval "1s"
  "LC_ALL=C nmcli networking"
)

(defpoll net-state
  :interval "1s"
  "LC_ALL=C nmcli networking connectivity"
)

(defpoll cal-day
  :interval "1h"
  "date +%d"
)

(defpoll cal-month
  :interval "10h"
  "date +%B"
)

(defpoll cal-year
  :interval "10h"
  "date +%Y"
)

(deflisten song
  "~/.config/eww/scripts/getsong.sh"
)
(defpoll notifications
  :interval "0.25s"
  "dunstctl history | jq"
)


(defwidget workspaces [n]
  (box
    :class "container"
    :space-evenly true
    :halign "start"
    :spacing 0
    (button :class "w${n}${active-workspace[n].active == '1' ? '1' : ''}" :onclick "~/.config/hypr/scripts/workspaces.sh 1" " ")
    (button :class "w${n}${active-workspace[n].active == '2' ? '2' : ''}" :onclick "~/.config/hypr/scripts/workspaces.sh 2" " ")
    (button :class "w${n}${active-workspace[n].active == '3' ? '3' : ''}" :onclick "~/.config/hypr/scripts/workspaces.sh 3" " ")
    (button :class "w${n}${active-workspace[n].active == '4' ? '4' : ''}" :onclick "~/.config/hypr/scripts/workspaces.sh 4" "󰈹 ")
    (button :class "w${n}${active-workspace[n].active == '5' ? '5' : ''}" :onclick "~/.config/hypr/scripts/workspaces.sh 5" " ")
    (button :class "w${n}${active-workspace[n].active == '6' ? '6' : ''}" :onclick "~/.config/hypr/scripts/workspaces.sh 6" "󰙯 ")
    (button :class "w${n}${active-workspace[n].active == '7' ? '7' : ''}" :onclick "~/.config/hypr/scripts/workspaces.sh 7" " ")
    (button :class "w${n}${active-workspace[n].active == '8' ? '8' : ''}" :onclick "~/.config/hypr/scripts/workspaces.sh 8" " ")
  )
)

(defwidget clock [n]
  (eventbox
    :class "clock"
    :onclick "eww open --toggle cal-window-${n}"
    (button
      :class "util-button"
      :onclick "eww open --toggle cal-window-${n}"
      time
    )
  )
)

(defwidget util-bar [n]
  (box
    :class "container"
    :halign "end"
    :spacing 4
    (button
      :class "util-button"
      '${(battery-state == "Charging") ? battery-icons[battery-state] : battery-icons["Discharging"][(battery - battery%10)/10]} ${battery}%'
    )
    (eventbox
      :onscroll "brightnessctl set 5%$(if [[ {} = 'down' ]]; then echo - -; else echo '+'; fi)"
      (button
        :class "util-button"
        :onclick ""
        :onmiddleclick ""
        "󰃟 ${brightness}%"
      )
    )
    (button
      :class "util-button"
      :onclick "nmcli networking ${net-enabled == 'enabled' ? 'off' : 'on'}"
      :onmiddleclick "bash ~/.config/eww/scripts/nmtui.sh"
      "${net-enabled == 'enabled' ? net-icons[net-state] : '󰖪'} ${net-state}"
    )
    (button
      :class "util-button"
      :onclick "bluetooth toggle"
      :onmiddleclick "blueberry"
      {bluetooth == "on" ? "󰂯 on" : "󰂲 off"}
    )
    (eventbox
      :onscroll "wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%$(if [[ {} = 'down' ]]; then echo - -; else echo '+'; fi)"
      (button
        :class "util-button"
        :onclick "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
        :onmiddleclick "bash ~/.config/eww/scripts/pulsemixer.sh"
        {vol[0].muted == 1 ? '󰖁 MUTE' : ' ${vol[0].volume}%'}
      )
    )
    (eventbox
      :onscroll "wpctl set-volume -l 1 @DEFAULT_AUDIO_SOURCE@ 5%$(if [[ {} = 'down' ]]; then echo - -; else echo '+'; fi)"
      (button
        :class "util-button"
        :onclick "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"
        :onmiddleclick "bash ~/.config/eww/scripts/pulsemixer.sh"
        {vol[1].muted == 1 ? ' MUTE' : ' ${vol[1].volume}%'}
      )
    )
    (clock
      :n n
    )
  )
)

(defwidget cal []
  (box
    :class "cal-box"
    (calendar
      :day cal-day
      :month cal-month
      :year cal-year
      :show-week-numbers true
    )
  )
)

(defwindow cal-window-0
  :monitor 0
  :geometry (geometry
    :width "15%"
    :height "19%"
    :anchor "bottom right"
  )
  :stacking "overlay"
  :focusable false
  :namespace "eww"
  (cal)
)

(defwindow cal-window-1
  :monitor 1
  :geometry (geometry
    :x "85%"
    :y "76%"
    :width "15%"
    :height "10%"
  )
  :stacking "overlay"
  :focusable false
  :namespace "eww"
  (cal)
)

(defwindow bar-0
  :monitor 0
  :geometry (geometry
    :width "100%"
    :anchor "bottom center"
  )
  :stacking "fg"
  :exclusive true
  :focusable false
  :namespace "eww"
  (box
    :orientation "v"
    :space-evenly false
    (revealer
      :transition "slideup"
      :reveal is-bar-visible
      :duration "250ms"
      (centerbox
        :height 56
        :orientation "h"
        (workspaces
          :n 0
        )
        (box
          :width "100%"
          :class "container"
          :halign "center"
        )
        (util-bar
          :n 0
        )
      )
    )
  )
)

(defwidget notifications []
  (box
    :class "notification-box"
    :orientation "v"
    :space-evenly false
    :spacing 4
    (label
      :class "title"
      :text "󰂚 Notificaciones"
    )
    (for not in {notifications.data[0]}
      (box
        :class "notification"
        :orientation "h"
        (label
          :xalign 0
          :limit-width 20
          :wrap true
          :markup {not.message.data}
        )
        (label
          :xalign 1
          :text "${not.appname.data}"
        )
      )
    )
  )
)

(defwindow notifications-0
  :monitor 0
  :geometry (geometry
    :width "30%"
    :anchor "top center"
  )
  :stacking "overlay"
  :exclusive false
  :focusable false
  :namespace "eww"
  (eventbox
    :onhover "eww update is-notifications-visible-0=true"
    :onhoverlost "eww update is-notifications-visible-0=false"
    (box
      :orientation "v"
      :space-evenly false
      (revealer
        :transition "slidedown"
        :reveal is-notifications-visible-0
        :duration "250ms"
        (notifications)
      )
      (box
        :height 1
      )
    )
  )
)
